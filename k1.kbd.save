
;; define configuration  ---------------------------------------------------

(defcfg
  ;; For Linux
  input  (device-file "/dev/input/by-path/platform-i8042-serio-0-event-kbd")
  output (uinput-sink "My KMonad output"
    ;; To understand the importance of the following line, see the section on
    ;; Compose-key sequences at the near-bottom of this file.
    "/run/current-system/sw/bin/sleep 1 && /run/current-system/sw/bin/setxkbmap -option compose:ralt")
  cmp-seq ralt    ;; Set the compose key to `RightAlt'
  cmp-seq-delay 5 ;; 5ms delay between each compose-key sequence press

  ;; Comment this if you want unhandled events not to be emitted
  fallthrough true

  ;; Set this to false to disable any command-execution in KMonad
  allow-cmd true

  ;; Set the implicit around to `around`
  implicit-around around
)


;; emtpy blueprit layer -------------------------------------------------- 

#|
(deflayer usAnsi60 + Function-keys-row
  _    _    _    _    _    _    _    _    _    _    _    _    _    _ 
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _              _              _    _    _    _
)
|#


;; define source  ---------------------------------------------------------

(defsrc
  esc  F1   F2   F3   F4   F5   F6   F7   F8  F9   F10   F11  F12  del                                
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet cmp  rctl
)


;; define alias  ----------------------------------------------------------

(defalias 
  ;;toggle/switch layers
  sym (layer-toggle symbols)
  r (tap-hold-next-release 400 r (layer-toggle numbers))
  n (tap-hold-next-release 300 n (layer-toggle arrows))
  p (tap-hold-next-release 400 p (layer-switch pythonNamer)) ;;change spacebar for '_'
  ;;p (tap-hold-next-release 400 p (layer-switch ES-layer))   
  tgbs1 (tap-hold-next-release 400 p (layer-switch baseLayer)) ;;switch back to base layer

  ;;misc 
  spc (tap-hold-next-release 300 spc lsft) ;;hold_space=hold_shift -> for camel case
  e (tap-hold-next-release 300 e esc)
  ;; k-case=tab
  
  ;; text navigation
  z (tap-hold-next-release 350 z #(C-z)) ;; undo
  x (tap-hold-next-release 350 x #(home S-end C-x home (pause 100))) ;; cut
  c (tap-hold-next-release 350 c #(home S-end C-c esc home)) ;; copy
  v (tap-hold-next-release 350 v #(C-v)) ;; paste
  ; (tap-hold-next-release 350 ; #(tab)) ;; tab
  ' (tap-hold-next-release 350 ' #(S-tab)) ;; Shit-tab
 

  hNav (layer-toggle histNav)

  ;; home row mods
  a (tap-hold-next-release 250 a #(cmp  rctl)) ;; available 
  s (tap-next-release s lalt)
  d (tap-next-release d lctl)
  f (tap-next-release f lmet)
  g (tap-hold-next-release 300 g lsft) ;; hold-shift that combines with hold ; to select line
  h (tap-hold-next-release 300 h lsft)
  j (tap-next-release j lmet)
  k (tap-next-release k lctl)
  l (tap-next-release l lalt)

  ;; numbers/symbols row
  1 (tap-hold-next-release 300 1 #(!))
  2 (tap-hold-next-release 300 2 #(@))    
  3 (tap-hold-next-release 300 3 #(#))        
  4 (tap-hold-next-release 300 4 #($))            
  5 (tap-hold-next-release 300 5 #(%))
  6 (tap-hold-next-release 300 6 #(^))
  7 (tap-hold-next-release 300 7 #(&))
  8 (tap-hold-next-release 300 8 #(*))
  9 (tap-hold-next-release 300 9 #(\())
  0 (tap-hold-next-release 300 0 #(\)))  
  - (tap-hold-next-release 300 - #(\_))
  = (tap-hold-next-release 300 = #(+ ))  

  ;;other symbols
  grv (tap-hold-next-release 300 ` #(~ (pause 100)))
  , (tap-hold-next-release 300 , #(< (pause 100)))   
  . (tap-hold-next-release 300 . #(> (pause 100)))  
  / (tap-hold-next-release 300 / #(? (pause 100)))  
  ;; #([ (pause 100)]{} )
  ;; (tap-hold-next-release 300 ; #(: (pause 100)))   
  ;;' (tap-hold-next-release 300 ' #(" (pause 100)))   
  \ (tap-hold-next-release 300 \ #(| (pause 100)))   
  [ (tap-hold-next-release 300 [ #({ (pause 100)))  
  ] (tap-hold-next-release 300 ] #(} (pause 100)))  
  
)
 

;; define layers  _____________________________________________________ 

(deflayer baseLayer
;;grv  !    @    #    $    %    ^    &    *   \(   \)    _    =    bspc
  esc  F1   F2   F3   F4   F5   F6   F7   F8  F9   F10   F11  F12  del                                
  @grv @1   @2   @3   @4   @5   @6   @7   @8   @9   @0   @-   @=   bspc
  tab   q   w    @e   @r    t    y    u    i    o   @p   @[   @]   @\
  caps @a   @s   @d   @f   @g   @h   @j   @k   @l   @;   @'    ret
  lsft  z   @x   @c   @v    b   @n   @m   @,   @.   @/   rsft
  lctl lmet lalt          @spc            ralt rmet cmp  rctl
)


(deflayer numbers
  _    _    _    _    _    _    _    _    _    _    _    _    _    _ 
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    XX   .    7    8    9    -    \(   \)   _
  _    _    _    _    _    XX   ,    4    5    6    +    /    _
  _    _    \(   \)   .    XX   0    1    2    3    *    _
  _    _    _              _              _    _    _    _
)


(defalias  ;; tab navigation _____________________________________________

  m (tap-hold-next-release 300 m (layer-toggle tabs))
  tn (tap-hold-next-release 300 C-tab A-9) ;; tap=tab-next / hold=last-tab
  tb (tap-hold-next-release 300 C-S-tab A-1) ;; tap=tab-back / hold=1st-tab
  tm  A-4 ;; go to tab 4 ~middle-tab
  ct C-w ;; close tab
  uct C-S-t ;;undo close tab
  tcn C-t ;; tab-create-new

)

(deflayer tabs
;;tb:tab back / tn:tab next /tm:tab 4 ~middle / ct: close tab / uct: undo close tab
;;alt left,right, in history
;;		- move browser tab alt+shift+arrow
;;		- new tab
  _    _    _    _    _    _   _    _    _    _    _    _    _    _ 
  _    _    _    _    _    _   _    _    _    _    _    _    _    _
  _   XX  @tcn  @ct  @uct  XX  _    _    _    _    _    _    _    _ 
  ret @tb  @tm  @tn   XX   _   _    _  @hNav  _    _    _    _
  bspc XX   XX   XX   XX   _   _    _    _    _    _    _
  _    _    _              _             _    _    _    _
 
)


(defalias  ;; history Navigation
  hb A-left
  hf A-right

  tal C-A-left  ;; tab rearrange left
  tar C-A-right ;;  ''    ''   right
)

(deflayer histNav ;;browser's history navigation + tab position rearrangement
;; hb/f= history back/forward
  _    _    _    _    _    _    _    _    _    _    _    _    _    _ 
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _   @hb  @hf   _    _    _    _    _    _    _    _    _    _  
  _   @tal  _   @tar  _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _              _              _    _    _    _


)


;; text navigation __________________________________________________________

(defalias

  ;;aa (tap-hold-next-release 100 left start) 
  ;;ss (tap-hold-next-release 100 down C-right C-right C-right C-right C-right   ) 
  ;;dd (tap-hold-next-release 100 right end) 
  mm (tap-hold 100 j (layer-toggle mscroll))
  aa (multi-tap 200 left home)
  ss (multi-tap 200 down #(C-right C-right C-right C-right C-right)) 
  dd (multi-tap 200 right end)

  ;;w (tap-hold-next-release 100 w (wheelup 50)) 
  ;;w scrollup (wheelup 50) 
)

(deflayer arrows  ;;                    k    l
  _    _    _    _    _    _    _    _    _    _    _    _    _    _ 
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _   XX   up   XX   del   _    _    _    _    _    _    _    _    _
  ret @aa  @ss @dd   bspc  _    _    _   rsft rctl  _    _    _
  XX  @z   XX   XX   XX    _    _   @mm   _    _    _    _
  _    _    _              _              _    _    _    _
 
)


(defalias
  ms #(down down down down down down)
  mw #(up up up up up up)
)
(deflayer mscroll ;; mouse scroll
  _    _    _    _    _    _    _    _    _    _    _    _    _    _ 
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _   XX   @mw  XX   del   _    _    _    _    _    _    _    _    _
  ret @aa  @ms  @dd  bspc  _    _    _    _    _    _    _    _
  XX  @z   XX   XX   XX    _    _    _    _    _    _    _
  _    _    _              _              _    _    _    _
)



(deflayer pythonNamer  ;;change space bar for '_' 

  _    _    _    _    _    _    _    _    _    _    _    _    _    _ 
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _  @tgbs1 _    _    _  
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _             \_              _    _    _    _

)



(defsrc :name numpad
  nlck kp/ kp* kp-
  kp7  kp8 kp9 kp+
  kp4  kp5 kp6
  kp1  kp2 kp3 kprt
  kp0    kp.
)


(deflayer qwerty
  esc  F1   F2   F3   F4   F5   F6   F7   F8  F9   F10   F11  F12  del                                
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
   _  lctl lalt           spc            ralt rmet @sym rctl 
)


(deflayer symbols  ;; layer length is incorrect
  _   _    _    _    _    _    _    _    _    _    _    _    _    
      _    _    _    _    _    _    _    _    _    _    _    _    
  _   ä    é    ©    _    _    _    _    _    _    _    _    _    
  _   +'   +~   +`   +^   _    _    _    _    _    _    _    _    
  _   +"   +,   _    _    _    _    _    _    _    _    _    _    _
  _   _    _    _              _              _    _    _    _    _
)

#|
(defalias
  ;; emphasis (tildes) á, é, í, ó, ú + ñ
  ea (tap-hold-next-release 300 a (cmd-button "xdotool type 'á'"))  ;; á
  ee (tap-hold-next-release 300 e (cmd-button "xdotool type 'é'"))  ;; é
  ei (tap-hold-next-release 300 i (cmd-button "xdotool type 'í'"))  ;; í
  eo (tap-hold-next-release 300 o (cmd-button "xdotool type 'ó'"))  ;; ó
  eu (tap-hold-next-release 300 u (cmd-button "xdotool type 'ú'"))  ;; ú
  en (tap-hold-next-release 300 n (cmd-button "xdotool type 'ñ'"))  ;; ñ
  
  ;;ea (tap-hold-next-release 300 a (unicode "00E1"))  ;; á
  ;;ee (tap-hold-next-release 300 e (unicode "00E9"))  ;; é
  ;;ei (tap-hold-next-release 300 i (unicode "00ED"))  ;; í
  ;;eo (tap-hold-next-release 300 o (unicode "00F3"))  ;; ó
  ;;eu (tap-hold-next-release 300 u (unicode "00FA"))  ;; ú
  ;;en (tap-hold-next-release 300 n (unicode "00F1"))  ;; ñ
)

(deflayer ES-layer
;; esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  del
    _    _    _    _    _    _    _    _    _    _    _    _    _    _
;;       1    2    3    4    5    6    7    8    9    0    -    =    bspc
         _    _    _    _    _    _    _    _    _    _    _    _    _
;;tab  q    w    e    r    t    y    u    i    o    p    [    ]    ret    
   _   _    _   @ee   _    _    _   @eu  @ei  @eo  @tgb    _    _    _
;;caps a    s    d    f    g    h    j    k    l    ;    '    \
   _   _    _    _    _    _    _    _    _    _    _    _    _
;;lsft `    z    x    c    v    b    n    m    ,    .    /    rsft up
   _   _    _    _    _    _    _   @en   _    _    _    _    _    _
;; fn   lctl lalt lmet           spc              rmet ralt   left down rght
   _    _    _    _              _                _    _      _    _    _
)



(deflayer compose-layer
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _  @cmp   _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _              _              _    _      _    _    _
  
  ;; Define compose sequences for accented characters
  a (multi-key "'" "a")  ;; á
  a (multi-key '("'") '("a"))  ;; á
  e (multi-key '("'") '("e"))  ;; é
  i (multi-key '("'") '("i"))  ;; í
  o (multi-key '("'") '("o"))  ;; ó
  u (multi-key '("'") '("u"))  ;; ú
  n (multi-key '("~") '("n"))  ;; ñ
)
|#
